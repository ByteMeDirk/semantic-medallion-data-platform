#name: CI/CD Pipeline
#
#on:
#  push:
#    branches: [ main ]
#  pull_request:
#    branches: [ main ]
#
#jobs:
#  test:
#    runs-on: ubuntu-latest
#    services:
#      postgres:
#        image: postgres:14
#        env:
#          POSTGRES_USER: postgres
#          POSTGRES_PASSWORD: postgres
#          POSTGRES_DB: medallion
#        ports:
#          - 5432:5432
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#
#      gcs-emulator:
#        image: fsouza/fake-gcs-server
#        ports:
#          - 4443:4443
#        options: >-
#          --entrypoint /bin/fake-gcs-server
#          --
#          -scheme http
#          -port 4443
#          -public-host localhost:4443
#
#    steps:
#    - uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.9'
#
#    - name: Install Poetry
#      uses: snok/install-poetry@v1
#      with:
#        version: 1.5.1
#        virtualenvs-create: true
#        virtualenvs-in-project: true
#
#    - name: Install dependencies
#      run: poetry install --no-interaction
#
#    - name: Run linters
#      run: |
#        poetry run black --check .
#        poetry run isort --check-only .
#        poetry run flake8
#        poetry run mypy semantic_medallion_data_platform
#
#    - name: Run tests
#      run: poetry run pytest --cov=semantic_medallion_data_platform
#      env:
#        GCS_EMULATOR_HOST: http://localhost:4443
#        POSTGRES_HOST: localhost
#        POSTGRES_PORT: 5432
#        POSTGRES_USER: postgres
#        POSTGRES_PASSWORD: postgres
#        POSTGRES_DB: medallion
#
#  deploy-dev:
#    needs: test
#    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
#    runs-on: ubuntu-latest
#
#    steps:
#    - uses: actions/checkout@v3
#
#    - name: Set up Python
#      uses: actions/setup-python@v4
#      with:
#        python-version: '3.9'
#
#    - name: Install Poetry
#      uses: snok/install-poetry@v1
#      with:
#        version: 1.5.1
#        virtualenvs-create: true
#        virtualenvs-in-project: true
#
#    - name: Install dependencies
#      run: poetry install --no-interaction
#
#    - name: Set up Terraform
#      uses: hashicorp/setup-terraform@v2
#      with:
#        terraform_version: 1.4.6
#
#    - name: Set up Google Cloud SDK
#      uses: google-github-actions/setup-gcloud@v1
#      with:
#        project_id: ${{ secrets.GCP_PROJECT_ID }}
#        service_account_key: ${{ secrets.GCP_SA_KEY }}
#        export_default_credentials: true
#
#    - name: Deploy infrastructure
#      run: |
#        cd infrastructure/environments/dev
#        terraform init
#        terraform apply -auto-approve -var="project_id=${{ secrets.GCP_PROJECT_ID }}"
#
#    - name: Build and publish package
#      run: |
#        poetry build
#        poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }}
#        poetry publish --build
